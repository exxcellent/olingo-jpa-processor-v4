<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.exxcellent.olingo-generic-processor</groupId>
	<artifactId>olingo-generic-processor-root-pom</artifactId>
	<version>0.37.3</version>
	<packaging>pom</packaging>

	<name>OData-JPA-Adapter Root POM</name>
	<url>https://gitlab.exxcellent.de/akad/olingo-generic-processor</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

		<!-- test and metadata module are using java.time.LocalDate from JRE 1.8 -->
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>

		<slf4j.version>1.7.30</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<olingo.version>4.7.1</olingo.version>
		<jetty.version>9.4.24.v20191120</jetty.version>
        <jersey.version>2.30.1</jersey.version>
		<jackson.version>2.10.1</jackson.version>
		<javax.servlet.version>4.0.1</javax.servlet.version>
		<eclipselink.version>2.7.5</eclipselink.version>
		<openjpa.version>3.1.0</openjpa.version>
		<hibernate.version>5.4.13.Final</hibernate.version>
	</properties>

	<modules>
		<module>jpa</module>
		<module>jpa-examples</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.xml.ws</groupId>
				<artifactId>jaxws-api</artifactId>
				<version>2.3.0</version>
			</dependency>
		    <dependency>
		    	<groupId>javax.ws.rs</groupId>
		    	<artifactId>javax.ws.rs-api</artifactId>
			    <version>2.1.1</version>
		    </dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.slf4j</groupId>
			    <artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<!-- required by logback-classic -->
		    	<groupId>org.codehaus.janino</groupId>
		    	<artifactId>janino</artifactId>
		    	<version>3.0.10</version>
		    </dependency>		
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-commons-core</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-commons-api</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-server-api</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-server-core</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-client-api</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>odata-client-core</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			<dependency>
			    <groupId>javax.transaction</groupId>
			    <artifactId>javax.transaction-api</artifactId>
			    <!-- Do not set to 1.3 to run with Java 9 -->
			    <version>1.2</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.jpa</artifactId>
				<version>${eclipselink.version}</version>
			</dependency>
			<dependency>
			    <groupId>javax.persistence</groupId>
			    <artifactId>javax.persistence-api</artifactId>
			    <version>2.2</version>
			</dependency>
			<dependency>
			    <groupId>org.hibernate</groupId>
			    <artifactId>hibernate-core</artifactId>
			    <version>${hibernate.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.openjpa</groupId>
			    <artifactId>openjpa</artifactId>
			    <version>${openjpa.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>10.14.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>2.4.1</version>
			</dependency>
			<dependency>
			    <groupId>com.h2database</groupId>
			    <artifactId>h2</artifactId>
			    <version>1.4.199</version>
			</dependency>			
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>2.0.1.Final</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<!-- declare core because of conflicts -->
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<!-- declare core because of conflicts -->
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
			<dependency>
			    <groupId>commons-fileupload</groupId>
			    <artifactId>commons-fileupload</artifactId>
			    <version>1.4</version>
			</dependency>					
			<dependency>
				<groupId>com.googlecode.flyway</groupId>
				<artifactId>flyway-core</artifactId>
				<version>2.3.1</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
			</dependency>
			<dependency>
			    <groupId>javax.inject</groupId>
			    <artifactId>javax.inject</artifactId>
			    <version>1</version>
			</dependency>
	        <dependency>
	            <groupId>org.glassfish.jersey.core</groupId>
	            <artifactId>jersey-client</artifactId>
	            <version>${jersey.version}</version>
	        </dependency>
			<dependency>
			    <groupId>org.glassfish.jersey.media</groupId>
			    <artifactId>jersey-media-multipart</artifactId>
	            <version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.inject</groupId>
				<artifactId>jersey-hk2</artifactId>
	            <version>${jersey.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.poi</groupId>
			    <artifactId>poi-ooxml</artifactId>
			    <version>4.1.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<extensions>
			<extension>
				<groupId>io.packagecloud.maven.wagon</groupId>
				<artifactId>maven-packagecloud-wagon</artifactId>
				<version>0.0.6</version>
			</extension>
		</extensions>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
					<configuration>
                        <argLine>${surefireArgLine}</argLine>
						<useSystemClassLoader>false</useSystemClassLoader>
						<systemProperties>
							<property>
								<name>derby.stream.error.file</name>
								<value>target/derby.log</value>
							</property>
						</systemProperties>
                        <excludes>
                            <exclude>**/*IT.java</exclude>
                        </excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.1</version>
					<configuration>
                        <argLine>${failsafeArgLine}</argLine>
						<useSystemClassLoader>false</useSystemClassLoader>
                        <includes>
                            <include>**/*IT.java</include>
                        </includes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
					<configuration>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
						<compilerArgument>-Xlint:unchecked</compilerArgument>
						<source>${java.source.version}</source>
						<target>${java.target.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
					<configuration>
						<!-- disable as default -->
						<skip>true</skip>
						<deployAtEnd>true</deployAtEnd>
						<!-- Allow overwriting of existing versions -->
						<uniqueVersion>false</uniqueVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-io</artifactId>
							<version>${jetty.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<!-- disable as default -->
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.4</version>
					<executions>
                        <!--
                            Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Surefire plugin is executed.
                        -->
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the name to the file which contains the execution data. -->
                                <destFile>${basedir}/target/jacoco.exec</destFile>
                                <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                                <propertyName>surefireArgLine</propertyName>
                                <append>true</append>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for unit tests is created after
                            unit tests have been run.
                        -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the name to the file which contains the execution data. -->
                                <dataFile>${basedir}/target/jacoco.exec</dataFile>
                                <!-- Sets the output directory for the code coverage report. -->
                                <outputDirectory>${basedir}/target/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                        <!--
                            Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Failsafe plugin is executed.
                        -->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the name to the file which contains the execution data. -->
                                <destFile>${basedir}/target/jacoco-it.exec</destFile>
                                <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                                <propertyName>failsafeArgLine</propertyName>
                                <append>true</append>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for integration tests after
                            integration tests have been run.
                        -->
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the name to the file which contains the execution data. -->
                                <dataFile>${basedir}/target/jacoco-it.exec</dataFile>
                                <!-- Sets the output directory for the code coverage report. -->
                                <outputDirectory>${basedir}/target/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
						<!-- defined disabled aggregated unit test coverage report -->
					  	<!-- Skip, because we have a separate model (overall-coverage-report) creating the report there -->
						<execution>
							<id>aggregate-reports-ut</id>
							<phase>test</phase>
							<goals>
								<goal>report-aggregate</goal>
							</goals>						  
							<configuration>
								<skip>true</skip>
								<title>Coverage of Unit Tests</title>
								<outputDirectory>${basedir}/target/jacoco-aggregate-ut</outputDirectory>
								<dataFileExcludes>
									<!-- exclude coverage data of integration tests --> 
									<dataFileExclude>**/target/jacoco-it.exec</dataFileExclude>
								</dataFileExcludes>								
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<attach>true</attach>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
					<show>protected</show>
					<serialwarn>false</serialwarn>
					<quiet>true</quiet>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- enable deployment of this module -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<!-- upload also all child modules without separate configuration -->
				<inherited>true</inherited>
				<configuration>
					<skip>false</skip>
					<deployAtEnd>true</deployAtEnd>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>packagecloud</id>
			<url>packagecloud+https://packagecloud.io/exxcellent/olingo-jpa-processor-v4</url>
		</repository>
		<snapshotRepository>
			<id>packagecloud</id>
			<url>packagecloud+https://packagecloud.io/exxcellent/olingo-jpa-processor-v4</url>
		</snapshotRepository>
	</distributionManagement>
	
	<!-- distributionManagement>
		<repository>
			<id>exxcellent_repository</id>
			<name>eXXcellent internal repository</name>
			<url>http://nexus.exxcellent.de/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>exxcellent_repository</id>
			<name>eXXcellent internal repository for snapshots</name>
			<url>http://nexus.exxcellent.de/repository/maven-snapshots/</url>
		</snapshotRepository>		
	</distributionManagement-->
</project>
